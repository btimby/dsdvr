# Generated by Django 2.1.5 on 2019-02-02 20:24

import api.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('icon', models.URLField(max_length=256, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('icon', models.URLField(max_length=256, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=8)),
                ('name', models.CharField(max_length=8)),
                ('stream', models.CharField(max_length=256, null=True)),
                ('icon', models.URLField(max_length=256, null=True)),
                ('high_definition', models.BooleanField(default=False)),
            ],
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('season', models.IntegerField()),
                ('episode_system', models.CharField(max_length=32)),
                ('episode', models.CharField(max_length=32)),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('type', models.SmallIntegerField(choices=[(0, 'movies'), (1, 'shows'), (2, 'music')])),
                ('name', models.CharField(max_length=32, unique=True)),
                ('path', api.models.DirectoryPathField(max_length=256, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=256)),
                ('path', models.FileField(upload_to='')),
                ('library', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movies', to='api.Library')),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MovieMeta',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meta', to='api.Movie')),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('path', models.FileField(upload_to='')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='api.Album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='api.Artist')),
                ('library', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='music', to='api.Library')),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MusicMeta',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('music', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meta', to='api.Music')),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=256)),
                ('start', models.DateTimeField()),
                ('stop', models.DateTimeField()),
                ('length', models.IntegerField()),
                ('icon', models.URLField(max_length=256, null=True)),
                ('previously_shown', models.BooleanField(default=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shows', to='api.Category')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shows', to='api.Channel')),
                ('episode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='copies', to='api.Episode')),
            ],
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('start', models.DateTimeField()),
                ('stop', models.DateTimeField()),
                ('status', models.SmallIntegerField(choices=[(0, 'none'), (1, 'recording'), (2, 'error'), (3, 'done')], default=0)),
                ('pid', models.IntegerField(null=True)),
                ('program', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recording', to='api.Program')),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('value', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('path', api.models.FilePathField(max_length=256)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shows', to='api.Library')),
                ('program', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='airings', to='api.Program')),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ShowMeta',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('show', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meta', to='api.Show')),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Tuner',
            fields=[
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField(editable=False)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, unique=True)),
                ('ipaddr', models.GenericIPAddressField()),
                ('model', models.CharField(max_length=48)),
                ('tuner_count', models.SmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=(api.models.UpdateMixin, models.Model),
        ),
        migrations.AddField(
            model_name='recording',
            name='show',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recording', to='api.Show'),
        ),
        migrations.AddField(
            model_name='program',
            name='rating',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Rating'),
        ),
        migrations.AddField(
            model_name='episode',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='api.Series'),
        ),
        migrations.AddField(
            model_name='channel',
            name='tuner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='api.Tuner'),
        ),
        migrations.AlterUniqueTogether(
            name='program',
            unique_together={('channel', 'start'), ('channel', 'stop')},
        ),
        migrations.AlterUniqueTogether(
            name='channel',
            unique_together={('tuner', 'number')},
        ),
    ]
